ConnectionLifecycleManager Braindump
------------------------------------

- Main-Window starts with Modal Dialog - https://docs.oracle.com/javase/tutorial/uiswing/misc/modality.html
- DebugClient exposes GintercomClientConfiguration (Interface from Shared)
- Shared exposes a ConnectionLifecycleManager @ConditionalOnBean(GintercomClientConfiguration.class)
- ConnectionLifecycleManager starts in DISCOVERY state
- ConnectionLifecycleManager uses a Timer and MatrixAddressDiscoveryService.tryNext() trying to find the Matrix
  - MatrixAddressDiscoveryServiceImplementation produces MatrixAddressDiscoveryServiceResult carrying IP and Port:
       (a) MatrixAddressDnsSdDiscoveryService: _gintercom._tcp / Port
       (b) MatrixAddressMdnsDiscoveryService: matrix.gintercom.local / Well Known Port
       (c) MatrixAddressWellKnownDnsNameDiscoveryService: matrix.gintercom.lan / Well Known Port
       (d) MatrixAddressLocalhostDiscoveryService 127.0.0.1 / Well Known Port
       (e) MatrixAddressConfiguredHostnameService -- if IP is configured via Cli-Args, only return this Address / Configured Port
  - ConnectionLifecycleManager emits MatrixAddressDiscoveryEvent extends MatrixConnectionLifecycleEvent for each try
    - Modal Dialog listens for these Events and displays them
- ConnectionLifecycleManager switches to CONNECTING state and emits a MatrixConnectionLifecycleStateChangedEvent extends MatrixConnectionLifecycleEvent
- ConnectionLifecycleManager uses MatrixControlServerClient to connect to the Matrix
  - Use Port from MatrixAddressDiscoveryServiceResult
  - in Case of Failure ConnectionLifecycleManager goes back to in DISCOVERY and Emits a matching Event
- ConnectionLifecycleManager switches to PROVISIONING state and emits a MatrixConnectionLifecycleStateChangedEvent extends MatrixConnectionLifecycleEvent
- ConnectionLifecycleManager invokes GintercomClientConfiguration to aquire Client configuration Details
  - ConnectionLifecycleManager builds an PanelRegistrationMessage based of that information and sends it to the /registration endpoint
- ConnectionLifecycleManager awaits a Provision-Message
  - ConnectionLifecycleManager emits an ProvisionUpdatedEvent
    - The Group-Buttons are Configured
    - The Pipeline is Configured
  - ConnectionLifecycleManager switches to OPERARATIONAL state and emits a MatrixConnectionLifecycleStateChangedEvent extends MatrixConnectionLifecycleEvent
    - The Modal Dialog is hidden
    - The Pipeline is started
- in Case of Connection-Loss/Error ConnectionLifecycleManager ensures the connection is closed and goes back to in DISCOVERY and Emits a matching Event
    - The Modal Dialog is updated & shown
    - The Pipeline is stopped



-- Try to use same Port for Rx/Tx by using the already opened socket

  Matrix TX-Port Random -> Client RX-Port 10001 |
  Client TX-Port Random -> Matrix RX-Port 10001 | shared sockets? reuse? problems when running on same host.

-- Provisioning chooses a Port from a Port-Pool -- Start and Limit are configurable
	[rtp.matrixToPanelPortPool]
	start=10000
	end=19999

	[rtp.PaneltoMatrixPortPool]
	start=20000
	end=29999
